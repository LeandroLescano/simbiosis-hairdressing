---
interface Props {
  label: string;
  variant?: "primary" | "secondary";
  fullWidth?: boolean;
  onClick?: string;
  class?: string;
  href?: string;
  type?: "button" | "submit" | "reset";
}

const {
  label,
  variant = "primary",
  fullWidth,
  href,
  type,
  onClick,
} = Astro.props;
const Component = href ? "a" : "button";
---

<Component
  href={href ?? undefined}
  type={type ?? "button"}
  onclick={onClick}
  class={`button ${variant} ${Astro.props.class} ${fullWidth && "full-width"}`}
>
  {label}
</Component>

<style>
  .button {
    padding: 10px 20px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.2s ease;
    color: #1a1a1a;
  }

  .button.primary {
    background-color: #03ffff;
  }

  .button.primary:hover {
    background-color: #00e2e2;
  }

  .button.secondary {
    background-color: white;
    border: 1px solid #1a1a1a;
  }
  .button.secondary:hover {
    background-color: #ffffffe1;
  }

  .button.full-width {
    width: 100%;
  }
</style>
